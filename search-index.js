var searchIndex = JSON.parse('{\
"telegpt_core":{"doc":"An out-of-box ChatGPT bot for Telegram.","t":[0,0,5,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["app","config","run","Config","I18nStrings","SharedConfig","admin_usernames","api_error_prompt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","conversation_limit","database_path","default","deref","deserialize","deserialize","fmt","fmt","fmt","from","from","from","i18n","into","into","into","new","not_allowed_prompt","openai_api_key","openai_api_timeout","reset_prompt","stream_throttle_interval","telegram_bot_token","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unerase","unerase","unerase","vzip","vzip","vzip"],"q":["telegpt_core","","telegpt_core::app","telegpt_core::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The entry of the bot application.","Configuration-related types.","Starts bot server and blocks the caller until the bot is …","Top-level config type fot the bot.","Strings for I18N.","A thread-safe reference-counting object that represents a …","A set of usernames that represents the admin users, who …","A text to display when there are something wrong with the …","","","","","","","","","","","","","Maximum number of messages in a single conversation. JSON …","A path for storing the database, <code>None</code> for in-memory …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Strings for I18N. JSON key: <code>i18n</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>SharedConfig</code>.","A text to display when the current user is not allowed to …","The API key of your OpenAI account. JSON key: <code>openaiAPIKey</code>","A timeout in seconds for waiting for the OpenAI server …","A text to display when the session is reset. JSON key: …","The throttle interval (in milliseconds) for sending …","The token of your Telegram bot. JSON key: <code>botToken</code>","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,3,1,2,3,1,2,3,1,2,3,1,2,3,2,2,3,1,2,3,1,2,3,1,2,3,2,1,2,3,1,3,2,2,3,2,2,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3],"f":[0,0,[1],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],0,0,[[],3],[1],[[],[[4,[2]]]],[[],[[4,[3]]]],[[1,5],6],[[2,5],6],[[3,5],6],[[]],[[]],[[]],0,[[]],[[]],[[]],[2,1],0,0,0,0,0,0,[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],7],[[],7],[[],7],[[[9,[8]]],9],[[[9,[8]]],9],[[[9,[8]]],9],[[]],[[]],[[]]],"p":[[3,"SharedConfig"],[3,"Config"],[3,"I18nStrings"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Erased"],[3,"NonNull"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
